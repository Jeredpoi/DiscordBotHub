import discord
from discord.ext import commands
from discord import app_commands
import random
import asyncio
from config import Config

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä
active_games = {}

class Games(commands.Cog):
    """–ò–≥—Ä–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞"""
    
    def __init__(self, bot):
        self.bot = bot
    
    @app_commands.command(name="guess_number", description="üéØ –£–≥–∞–¥–∞–π –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ")
    @app_commands.describe(maximum="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è —É–≥–∞–¥—ã–≤–∞–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 100)")
    async def guess_number(self, interaction: discord.Interaction, maximum: int = 100):
        """–ò–≥—Ä–∞ –≤ —É–≥–∞–¥—ã–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞"""
        if maximum < 2 or maximum > 10000:
            await interaction.response.send_message("‚ùå –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 2 –¥–æ 10,000!", ephemeral=True)
            return
        
        channel_id = interaction.channel.id
        if channel_id in active_games:
            await interaction.response.send_message("‚ùå –í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ —É–∂–µ –∏–¥—ë—Ç –∏–≥—Ä–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/stop_game` —á—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å.", ephemeral=True)
            return
        
        secret_number = random.randint(1, maximum)
        attempts = 0
        max_attempts = min(10, max(3, maximum // 10))
        
        active_games[channel_id] = {
            'type': 'guess_number',
            'secret': secret_number,
            'attempts': attempts,
            'max_attempts': max_attempts,
            'player': interaction.user.id
        }
        
        embed = discord.Embed(
            title="üéØ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ!",
            description=f"–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç **1** –¥–æ **{maximum}**!\n"
                       f"–£ –≤–∞—Å –µ—Å—Ç—å **{max_attempts}** –ø–æ–ø—ã—Ç–æ–∫.\n\n"
                       f"–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —á–∏—Å–ª–æ –≤ —á–∞—Ç!",
            color=Config.COLORS['entertainment']
        )
        embed.set_footer(text=f"–ò–≥—Ä–æ–∫: {interaction.user.display_name}")
        
        await interaction.response.send_message(embed=embed)
    
    @app_commands.command(name="rps", description="‚úÇÔ∏è –ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞")
    @app_commands.describe(choice="–í–∞—à –≤—ã–±–æ—Ä: –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞")
    async def rock_paper_scissors(self, interaction: discord.Interaction, choice: str):
        """–ò–≥—Ä–∞ –≤ –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞"""
        choices = {
            '–∫–∞–º–µ–Ω—å': 'üóø',
            '–Ω–æ–∂–Ω–∏—Ü—ã': '‚úÇÔ∏è', 
            '–±—É–º–∞–≥–∞': 'üìÑ',
            'rock': 'üóø',
            'scissors': '‚úÇÔ∏è',
            'paper': 'üìÑ'
        }
        
        user_choice = choice.lower()
        if user_choice not in choices:
            await interaction.response.send_message("‚ùå –í—ã–±–µ—Ä–∏—Ç–µ: –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞!", ephemeral=True)
            return
        
        bot_choice = random.choice(['–∫–∞–º–µ–Ω—å', '–Ω–æ–∂–Ω–∏—Ü—ã', '–±—É–º–∞–≥–∞'])
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
        win_conditions = {
            '–∫–∞–º–µ–Ω—å': '–Ω–æ–∂–Ω–∏—Ü—ã',
            '–Ω–æ–∂–Ω–∏—Ü—ã': '–±—É–º–∞–≥–∞', 
            '–±—É–º–∞–≥–∞': '–∫–∞–º–µ–Ω—å'
        }
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
        if user_choice in ['rock', 'scissors', 'paper']:
            translate = {'rock': '–∫–∞–º–µ–Ω—å', 'scissors': '–Ω–æ–∂–Ω–∏—Ü—ã', 'paper': '–±—É–º–∞–≥–∞'}
            user_choice = translate[user_choice]
        
        if user_choice == bot_choice:
            result = "–ù–∏—á—å—è!"
            color = Config.COLORS['warning']
        elif win_conditions[user_choice] == bot_choice:
            result = "–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! üéâ"
            color = Config.COLORS['success']
        else:
            result = "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! üò¢"
            color = Config.COLORS['error']
        
        embed = discord.Embed(
            title="‚úÇÔ∏è –ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞",
            description=f"**–í–∞—à –≤—ã–±–æ—Ä:** {choices[user_choice]} {user_choice.title()}\n"
                       f"**–ú–æ–π –≤—ã–±–æ—Ä:** {choices[bot_choice]} {bot_choice.title()}\n\n"
                       f"**–†–µ–∑—É–ª—å—Ç–∞—Ç:** {result}",
            color=color
        )
        embed.set_footer(text="–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â—ë? üéÆ")
        
        await interaction.response.send_message(embed=embed)
    
    @app_commands.command(name="trivia", description="üß† –í–∏–∫—Ç–æ—Ä–∏–Ω–∞")
    async def trivia(self, interaction: discord.Interaction):
        """–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏"""
        questions = [
            {
                "question": "–ö–∞–∫–æ–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–ª –ì–≤–∏–¥–æ –≤–∞–Ω –†–æ—Å—Å—É–º?",
                "options": ["Java", "Python", "C++", "JavaScript"],
                "correct": 1
            },
            {
                "question": "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç HTTP?",
                "options": ["HyperText Transfer Protocol", "High Tech Transfer Protocol", "Home Tool Transfer Protocol", "HyperText Transport Protocol"],
                "correct": 0
            },
            {
                "question": "–í –∫–∞–∫–æ–º –≥–æ–¥—É –±—ã–ª —Å–æ–∑–¥–∞–Ω Discord?",
                "options": ["2013", "2015", "2017", "2019"],
                "correct": 1
            },
            {
                "question": "–°–∫–æ–ª—å–∫–æ –±–∞–π—Ç –≤ –æ–¥–Ω–æ–º –∫–∏–ª–æ–±–∞–π—Ç–µ?",
                "options": ["1000", "1024", "512", "2048"],
                "correct": 1
            },
            {
                "question": "–ö—Ç–æ –æ—Å–Ω–æ–≤–∞–ª Microsoft?",
                "options": ["–°—Ç–∏–≤ –î–∂–æ–±—Å", "–ú–∞—Ä–∫ –¶—É–∫–µ—Ä–±–µ—Ä–≥", "–ë–∏–ª–ª –ì–µ–π—Ç—Å", "–õ–∞—Ä—Ä–∏ –ü–µ–π–¥–∂"],
                "correct": 2
            }
        ]
        
        question_data = random.choice(questions)
        
        embed = discord.Embed(
            title="üß† –í–æ–ø—Ä–æ—Å –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã",
            description=question_data["question"],
            color=Config.COLORS['info']
        )
        
        for i, option in enumerate(question_data["options"]):
            embed.add_field(
                name=f"{i+1}Ô∏è‚É£ –í–∞—Ä–∏–∞–Ω—Ç {i+1}",
                value=option,
                inline=False
            )
        
        embed.set_footer(text="–û—Ç–≤–µ—Ç –ø–æ—è–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥! ‚è∞")
        
        await interaction.response.send_message(embed=embed)
        
        await asyncio.sleep(15)
        
        correct_answer = question_data["options"][question_data["correct"]]
        
        answer_embed = discord.Embed(
            title="‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç",
            description=f"**{correct_answer}**",
            color=Config.COLORS['success']
        )
        answer_embed.set_footer(text="–ó–Ω–∞–ª–∏ –æ—Ç–≤–µ—Ç? ü§ì")
        
        await interaction.followup.send(embed=answer_embed)
    
    @app_commands.command(name="word_chain", description="üîó –ò–≥—Ä–∞ –≤ —Ü–µ–ø–æ—á–∫—É —Å–ª–æ–≤")
    async def word_chain(self, interaction: discord.Interaction):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–≥—Ä—É –≤ —Ü–µ–ø–æ—á–∫—É —Å–ª–æ–≤"""
        channel_id = interaction.channel.id
        if channel_id in active_games:
            await interaction.response.send_message("‚ùå –í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ —É–∂–µ –∏–¥—ë—Ç –∏–≥—Ä–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/stop_game` —á—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å.", ephemeral=True)
            return
        
        starting_words = ["–ø—Ä–æ–≥—Ä–∞–º–º–∞", "–∫–æ–º–ø—å—é—Ç–µ—Ä", "–¥–∏—Å–∫–æ—Ä–¥", "–±–æ—Ç", "–∏–≥—Ä–∞", "—Å–µ—Ä–≤–µ—Ä", "–∫–∞–Ω–∞–ª", "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "–ø–∏–∑–¥–∞"]
        start_word = random.choice(starting_words)
        
        active_games[channel_id] = {
            'type': 'word_chain',
            'last_word': start_word,
            'used_words': {start_word},
            'current_player': None,
            'words_count': 1
        }
        
        embed = discord.Embed(
            title="üîó –ò–≥—Ä–∞ –≤ —Ü–µ–ø–æ—á–∫—É —Å–ª–æ–≤",
            description=f"**–ü—Ä–∞–≤–∏–ª–∞:**\n"
                       f"‚Ä¢ –°–ª–µ–¥—É—é—â–µ–µ —Å–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –±—É–∫–≤—É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ\n"
                       f"‚Ä¢ –ù–µ–ª—å–∑—è –ø–æ–≤—Ç–æ—Ä—è—Ç—å —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Å–ª–æ–≤–∞\n"
                       f"‚Ä¢ –¢–æ–ª—å–∫–æ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –≤ –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ\n\n"
                       f"**–ü–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ:** `{start_word}`\n"
                       f"**–°–ª–µ–¥—É—é—â–µ–µ —Å–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –Ω–∞ –±—É–∫–≤—É:** `{start_word[-1].upper()}`",
            color=Config.COLORS['entertainment']
        )
        embed.set_footer(text="–ù–∞–ø–∏—à–∏—Ç–µ —Å–ª–æ–≤–æ –≤ —á–∞—Ç! üí¨")
        
        await interaction.response.send_message(embed=embed)
    
    @app_commands.command(name="memory_game", description="üß© –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –ø–∞–º—è—Ç–∏")
    async def memory_game(self, interaction: discord.Interaction):
        """–ò–≥—Ä–∞ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –ø–∞–º—è—Ç–∏"""
        channel_id = interaction.channel.id
        if channel_id in active_games:
            await interaction.response.send_message("‚ùå –í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ —É–∂–µ –∏–¥—ë—Ç –∏–≥—Ä–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/stop_game` —á—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å.", ephemeral=True)
            return
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        sequence = [random.randint(1, 9) for _ in range(5)]
        
        active_games[channel_id] = {
            'type': 'memory_game',
            'sequence': sequence,
            'current_position': 0,
            'player': interaction.user.id
        }
        
        sequence_str = " ".join(map(str, sequence))
        
        embed = discord.Embed(
            title="üß© –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –ø–∞–º—è—Ç–∏",
            description=f"**–ó–∞–ø–æ–º–Ω–∏—Ç–µ —ç—Ç—É –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å:**\n\n"
                       f"# {sequence_str}\n\n"
                       f"–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏—Å—á–µ–∑–Ω–µ—Ç —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥!\n"
                       f"–ó–∞—Ç–µ–º –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–∞ –ø–æ –æ–¥–Ω–æ–º—É –≤ —á–∞—Ç.",
            color=Config.COLORS['info']
        )
        embed.set_footer(text=f"–ò–≥—Ä–æ–∫: {interaction.user.display_name}")
        
        message = await interaction.response.send_message(embed=embed)
        
        await asyncio.sleep(10)
        
        hidden_embed = discord.Embed(
            title="üß© –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –ø–∞–º—è—Ç–∏",
            description="**–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ –ø–æ –ø–æ—Ä—è–¥–∫—É!**\n\n"
                       f"–í–≤–µ–¥–∏—Ç–µ **—á–∏—Å–ª–æ ‚Ññ1** –∏–∑ –∑–∞–ø–æ–º–Ω–µ–Ω–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:",
            color=Config.COLORS['warning']
        )
        hidden_embed.set_footer(text=f"–ò–≥—Ä–æ–∫: {interaction.user.display_name}")
        
        await interaction.edit_original_response(embed=hidden_embed)
    
    @app_commands.command(name="coin_battle", description="üí∞ –ë–∏—Ç–≤–∞ –º–æ–Ω–µ—Ç–æ–∫")
    @app_commands.describe(opponent="–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ –¥–ª—è –±–∏—Ç–≤—ã –º–æ–Ω–µ—Ç–æ–∫")
    async def coin_battle(self, interaction: discord.Interaction, opponent: discord.Member):
        """–ë–∏—Ç–≤–∞ –º–æ–Ω–µ—Ç–æ–∫ –º–µ–∂–¥—É –¥–≤—É–º—è –∏–≥—Ä–æ–∫–∞–º–∏"""
        if opponent.bot:
            await interaction.response.send_message("‚ùå –ù–µ–ª—å–∑—è –∏–≥—Ä–∞—Ç—å –ø—Ä–æ—Ç–∏–≤ –±–æ—Ç–æ–≤!", ephemeral=True)
            return
        
        if opponent.id == interaction.user.id:
            await interaction.response.send_message("‚ùå –ù–µ–ª—å–∑—è –∏–≥—Ä–∞—Ç—å –ø—Ä–æ—Ç–∏–≤ —Å–∞–º–æ–≥–æ —Å–µ–±—è!", ephemeral=True)
            return
        
        user1_flip = random.choice(['–û—Ä—ë–ª', '–†–µ—à–∫–∞'])
        user2_flip = random.choice(['–û—Ä—ë–ª', '–†–µ—à–∫–∞'])
        
        if user1_flip == user2_flip:
            result = "–ù–∏—á—å—è! –û–±–µ –º–æ–Ω–µ—Ç–∫–∏ –ø–æ–∫–∞–∑–∞–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!"
            color = Config.COLORS['warning']
        else:
            winner = interaction.user if user1_flip == '–û—Ä—ë–ª' else opponent
            result = f"–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: {winner.mention}!"
            color = Config.COLORS['success']
        
        embed = discord.Embed(
            title="üí∞ –ë–∏—Ç–≤–∞ –º–æ–Ω–µ—Ç–æ–∫",
            description=f"**{interaction.user.display_name}:** ü™ô {user1_flip}\n"
                       f"**{opponent.display_name}:** ü™ô {user2_flip}\n\n"
                       f"**{result}**",
            color=color
        )
        embed.set_footer(text="–£–¥–∞—á–∞ —Ä–µ—à–∞–µ—Ç –≤—Å—ë! üçÄ")
        
        await interaction.response.send_message(embed=embed)
    
    @app_commands.command(name="stop_game", description="‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—É—é –∏–≥—Ä—É")
    async def stop_game(self, interaction: discord.Interaction):
        """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—É—é –∏–≥—Ä—É –≤ –∫–∞–Ω–∞–ª–µ"""
        channel_id = interaction.channel.id
        if channel_id not in active_games:
            await interaction.response.send_message("‚ùå –í —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä!", ephemeral=True)
            return
        
        game_type = active_games[channel_id]['type']
        del active_games[channel_id]
        
        embed = discord.Embed(
            title="‚èπÔ∏è –ò–≥—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞",
            description=f"–ò–≥—Ä–∞ **{game_type}** –±—ã–ª–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.",
            color=Config.COLORS['info']
        )
        
        await interaction.response.send_message(embed=embed)
    
    @app_commands.command(name="games_help", description="‚ùì –ü–æ–º–æ—â—å –ø–æ –∏–≥—Ä–æ–≤—ã–º –∫–æ–º–∞–Ω–¥–∞–º")
    async def games_help(self, interaction: discord.Interaction):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–º–æ—â—å –ø–æ –∏–≥—Ä–æ–≤—ã–º –∫–æ–º–∞–Ω–¥–∞–º"""
        embed = discord.Embed(
            title="üéØ –ò–≥—Ä–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã",
            description="–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è!",
            color=Config.COLORS['entertainment']
        )
        
        games_list = [
            "`/guess_number [–º–∞–∫—Å]` - –£–≥–∞–¥–∞–π –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ",
            "`/rps [–≤—ã–±–æ—Ä]` - –ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞",
            "`/trivia` - –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏",
            "`/word_chain` - –ò–≥—Ä–∞ –≤ —Ü–µ–ø–æ—á–∫—É —Å–ª–æ–≤",
            "`/memory_game` - –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –ø–∞–º—è—Ç–∏", 
            "`/coin_battle [@–ø—Ä–æ—Ç–∏–≤–Ω–∏–∫]` - –ë–∏—Ç–≤–∞ –º–æ–Ω–µ—Ç–æ–∫",
            "`/stop_game` - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—É—é –∏–≥—Ä—É"
        ]
        
        embed.add_field(
            name="üéÆ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–≥—Ä—ã:",
            value="\n".join(games_list),
            inline=False
        )
        
        embed.add_field(
            name="üìã –ü—Ä–∞–≤–∏–ª–∞:",
            value="‚Ä¢ –í –∫–∞–∂–¥–æ–º –∫–∞–Ω–∞–ª–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –∏–≥—Ä–∞\n"
                  "‚Ä¢ –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–≥—Ä—ã —Ç—Ä–µ–±—É—é—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –≤ —á–∞—Ç–µ\n"
                  "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/stop_game` –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏–≥—Ä—ã",
            inline=False
        )
        
        embed.set_footer(text="–ò–≥—Ä–∞–π—Ç–µ –∏ –≤–µ—Å–µ–ª–∏—Ç–µ—Å—å! üéâ")
        
        await interaction.response.send_message(embed=embed)
    
    @commands.Cog.listener()
    async def on_message(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä"""
        if message.author.bot:
            return
        
        channel_id = message.channel.id
        if channel_id not in active_games:
            return
        
        game = active_games[channel_id]
        
        if game['type'] == 'guess_number':
            await self.handle_guess_number(message, game)
        elif game['type'] == 'word_chain':
            await self.handle_word_chain(message, game)
        elif game['type'] == 'memory_game':
            await self.handle_memory_game(message, game)
    
    async def handle_guess_number(self, message, game):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–≥—Ä—ã —É–≥–∞–¥—ã–≤–∞–Ω–∏—è —á–∏—Å–ª–∞"""
        if message.author.id != game['player']:
            return
        
        try:
            guess = int(message.content)
        except ValueError:
            return
        
        game['attempts'] += 1
        secret = game['secret']
        
        if guess == secret:
            embed = discord.Embed(
                title="üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é!",
                description=f"–í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ **{secret}** –∑–∞ **{game['attempts']}** –ø–æ–ø—ã—Ç–æ–∫!",
                color=Config.COLORS['success']
            )
            del active_games[message.channel.id]
        elif game['attempts'] >= game['max_attempts']:
            embed = discord.Embed(
                title="üòû –ü–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å",
                description=f"–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±—ã–ª–æ: **{secret}**\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!",
                color=Config.COLORS['error']
            )
            del active_games[message.channel.id]
        else:
            remaining = game['max_attempts'] - game['attempts']
            hint = "–±–æ–ª—å—à–µ" if guess < secret else "–º–µ–Ω—å—à–µ"
            
            embed = discord.Embed(
                title="üéØ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑",
                description=f"–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ **{hint}** —á–µ–º **{guess}**\n"
                           f"–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ø—ã—Ç–æ–∫: **{remaining}**",
                color=Config.COLORS['warning']
            )
        
        await message.channel.send(embed=embed)
    
    async def handle_word_chain(self, message, game):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–≥—Ä—ã –≤ —Ü–µ–ø–æ—á–∫—É —Å–ª–æ–≤"""
        word = message.content.lower().strip()
        
        if len(word.split()) != 1:
            return
        
        last_word = game['last_word']
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Å–ª–æ–≤–∞
        if word[0] != last_word[-1]:
            embed = discord.Embed(
                title="‚ùå –ù–µ–≤–µ—Ä–Ω–æ!",
                description=f"–°–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –Ω–∞ –±—É–∫–≤—É **{last_word[-1].upper()}**",
                color=Config.COLORS['error']
            )
            await message.channel.send(embed=embed)
            return
        
        if word in game['used_words']:
            embed = discord.Embed(
                title="‚ùå –°–ª–æ–≤–æ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–æ—Å—å!",
                description="–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –¥—Ä—É–≥–æ–µ —Å–ª–æ–≤–æ.",
                color=Config.COLORS['error']
            )
            await message.channel.send(embed=embed)
            return
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª–æ–≤–æ
        game['last_word'] = word
        game['used_words'].add(word)
        game['words_count'] += 1
        
        embed = discord.Embed(
            title="‚úÖ –û—Ç–ª–∏—á–Ω–æ!",
            description=f"**–°–ª–æ–≤ –≤ —Ü–µ–ø–æ—á–∫–µ:** {game['words_count']}\n"
                       f"**–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–ª–æ–≤–æ:** `{word}`\n"
                       f"**–°–ª–µ–¥—É—é—â–µ–µ —Å–ª–æ–≤–æ –Ω–∞:** `{word[-1].upper()}`",
            color=Config.COLORS['success']
        )
        
        await message.channel.send(embed=embed)
    
    async def handle_memory_game(self, message, game):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–≥—Ä—ã –Ω–∞ –ø–∞–º—è—Ç—å"""
        if message.author.id != game['player']:
            return
        
        try:
            number = int(message.content)
        except ValueError:
            return
        
        expected = game['sequence'][game['current_position']]
        
        if number == expected:
            game['current_position'] += 1
            
            if game['current_position'] >= len(game['sequence']):
                embed = discord.Embed(
                    title="üéâ –û—Ç–ª–∏—á–Ω–∞—è –ø–∞–º—è—Ç—å!",
                    description="–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–ª–∏ –≤—Å—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å!",
                    color=Config.COLORS['success']
                )
                del active_games[message.channel.id]
            else:
                embed = discord.Embed(
                    title="‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!",
                    description=f"–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ **—á–∏—Å–ª–æ ‚Ññ{game['current_position'] + 1}**:",
                    color=Config.COLORS['success']
                )
        else:
            sequence_str = " ".join(map(str, game['sequence']))
            embed = discord.Embed(
                title="‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!",
                description=f"–ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±—ã–ª–∞:\n**{sequence_str}**",
                color=Config.COLORS['error']
            )
            del active_games[message.channel.id]
        
        await message.channel.send(embed=embed)

async def setup(bot):
    await bot.add_cog(Games(bot))
