import discord
import asyncio
import sqlite3
import json
from discord.ext import commands
from discord import app_commands
from datetime import datetime, timedelta
from config import Config

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –±–æ—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
warnings_storage = {}
muted_users = {}
DB_BAN = sqlite3.connect("db_ban.sqlite3")  # –≥–ª–æ–±–∞–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–ª—è –±–∞–Ω–æ–≤
DB_BAN.execute("""
CREATE TABLE IF NOT EXISTS bans (
    guild_id INTEGER,
    user_id INTEGER,
    roles TEXT,
    reason TEXT,
    timestamp REAL,
    duration TEXT,
    PRIMARY KEY(guild_id, user_id)
)
""")
DB_BAN.commit()

class Moderation(commands.Cog):
    """–ö–æ–º–∞–Ω–¥—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞"""
    
    def __init__(self, bot):
        self.bot = bot
    
    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–ª—è –∫–æ–º–∞–Ω–¥ –º–æ–¥–µ—Ä–∞—Ü–∏–∏"""
        return True  # –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –±—É–¥—É—Ç –≤ –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥–µ –æ—Ç–¥–µ–ª—å–Ω–æ
    
    @app_commands.command(name="kick", description="üë¢ –ò—Å–∫–ª—é—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞")
    @app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è", reason="–ü—Ä–∏—á–∏–Ω–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è")
    @app_commands.default_permissions(kick_members=True)
    async def kick(self, interaction: discord.Interaction, user: discord.Member, reason: str = "–ù–µ —É–∫–∞–∑–∞–Ω–∞"):
        """–ò—Å–∫–ª—é—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞"""
        # –ü—Ä–æ–≤–µ—Ä–∫–∏
        if user.id == interaction.user.id:
            await interaction.response.send_message("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–∫–ª—é—á–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è!", ephemeral=True)
            return
        
        if user.id == self.bot.user.id:
            await interaction.response.send_message("‚ùå –Ø –Ω–µ –º–æ–≥—É –∏—Å–∫–ª—é—á–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è!", ephemeral=True)
            return
        
        if user.top_role >= interaction.user.top_role:
            await interaction.response.send_message("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–∞–≤–Ω–æ–π –∏–ª–∏ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–π —Ä–æ–ª—å—é!", ephemeral=True)
            return
        
        try:
            await user.kick(reason=f"–ò—Å–∫–ª—é—á—ë–Ω {interaction.user}: {reason}")
            
            embed = discord.Embed(
                title="üë¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–∫–ª—é—á—ë–Ω",
                description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {user.mention}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {interaction.user.mention}\n**–ü—Ä–∏—á–∏–Ω–∞:** {reason}",
                color=Config.COLORS['moderation']
            )
            embed.timestamp = datetime.now()
            
            await interaction.response.send_message(embed=embed)
            
        except discord.Forbidden:
            await interaction.response.send_message("‚ùå –£ –º–µ–Ω—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!", ephemeral=True)
        except Exception as e:
            await interaction.response.send_message(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

    @app_commands.command(
        name="ban",
        description="üî® –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ (—Ä–æ–ª—å-–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞)"
    )
    @app_commands.describe(
        user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏",
        reason="–ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏",
        duration="–í—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1d2h30m)"
    )
    @app_commands.default_permissions(manage_roles=True)
    async def ban(self, interaction: discord.Interaction, user: discord.Member, reason: str = "–ù–µ —É–∫–∞–∑–∞–Ω–∞",
                  duration: str = None):
        guild = interaction.guild

        # --- –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–∞—Ä—Å–µ—Ä –≤—Ä–µ–º–µ–Ω–∏ ---
        def parse_time(time_str: str) -> int:
            units = {"d": 86400, "h": 3600, "m": 60, "s": 1}
            seconds = 0
            num = ""
            for char in time_str:
                if char.isdigit():
                    num += char
                elif char in units and num:
                    seconds += int(num) * units[char]
                    num = ""
            return seconds

        # --- –ü—Ä–æ–≤–µ—Ä–∫–∏ ---
        if not interaction.user.guild_permissions.manage_roles:
            await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤!", ephemeral=True)
            return
        if user.id == interaction.user.id:
            await interaction.response.send_message("‚ùå –ù–µ–ª—å–∑—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å–µ–±—è!", ephemeral=True)
            return
        if user.top_role >= interaction.user.top_role:
            await interaction.response.send_message("‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–ª–∏—à–∫–æ–º –≤—ã—Å–æ–∫–∞—è —Ä–æ–ª—å!", ephemeral=True)
            return

        # --- –†–æ–ª—å "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" ---
        blacklist_role = discord.utils.get(guild.roles, name="–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
        if blacklist_role is None:
            blacklist_role = await guild.create_role(
                name="–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω",
                color=discord.Color.dark_grey(),
                permissions=discord.Permissions.none(),
                reason="–°–æ–∑–¥–∞–Ω–∞ —Ä–æ–ª—å –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏"
            )
            for channel in guild.channels:
                try:
                    await channel.set_permissions(blacklist_role, send_messages=False, speak=False, add_reactions=False)
                except:
                    pass

        if blacklist_role in user.roles:
            await interaction.response.send_message("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!", ephemeral=True)
            return

        # --- –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ë–î ---
        roles_to_remove = [r for r in user.roles if r != guild.default_role]
        role_names = [r.name for r in roles_to_remove]
        role_ids = [r.id for r in roles_to_remove]
        cursor = DB_BAN.cursor()
        cursor.execute(
            "INSERT OR REPLACE INTO bans (guild_id, user_id, roles) VALUES (?, ?, ?)",
            (guild.id, user.id, ",".join(map(str, role_ids)))
        )
        DB_BAN.commit()

        # --- –°–Ω–∏–º–∞–µ–º –≤—Å–µ —Ä–æ–ª–∏ ---
        if roles_to_remove:
            await user.remove_roles(*roles_to_remove, reason=f"–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞: {reason}")
            print(f"[BAN] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} ‚Äî —Å–Ω—è—Ç—ã —Ä–æ–ª–∏: {', '.join(role_names)}")

        # --- –í—ã–¥–∞—ë–º —Ç–æ–ª—å–∫–æ —Ä–æ–ª—å "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" ---
        await user.add_roles(blacklist_role, reason=f"–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞: {reason}")
        print(f"[BAN] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} –ø–æ–ª—É—á–∏–ª —Ä–æ–ª—å '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'")

        # --- Embed —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ---
        embed = discord.Embed(
            title="üî® –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω",
            description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {user.mention}\n"
                        f"**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {interaction.user.mention}\n"
                        f"**–ü—Ä–∏—á–∏–Ω–∞:** {reason}\n"
                        f"**–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** {'–ù–∞–≤—Å–µ–≥–¥–∞' if not duration else duration}",
            color=discord.Color.dark_red()
        )
        embed.set_thumbnail(url=user.display_avatar.url)
        embed.timestamp = datetime.now()
        await interaction.response.send_message(embed=embed, ephemeral=True)

        # --- –¢–∞–π–º–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–±–∞–Ωa ---
        if duration:
            seconds = parse_time(duration)
            if seconds > 0:
                async def remove_role_later():
                    await asyncio.sleep(seconds)
                    member = guild.get_member(user.id)
                    if member and blacklist_role in member.roles:
                        await member.remove_roles(blacklist_role, reason="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–±–∞–Ω")
                        print(f"[UNBAN] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member} —Ä–∞–∑–±–∞–Ω–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ {duration}.")

                        # --- –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–∂–Ω–∏—Ö —Ä–æ–ª–µ–π ---
                        roles_to_restore = cursor.execute(
                            "SELECT roles FROM bans WHERE guild_id = ? AND user_id = ?",
                            (guild.id, user.id)
                        ).fetchone()
                        restored_names = []
                        if roles_to_restore and roles_to_restore[0]:
                            role_ids_restore = [int(rid) for rid in roles_to_restore[0].split(",")]
                            for rid in role_ids_restore:
                                role = guild.get_role(rid)
                                if role:
                                    await member.add_roles(role, reason="–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π –ø–æ—Å–ª–µ –±–∞–Ω–∞")
                                    restored_names.append(role.name)
                        if restored_names:
                            print(f"[UNBAN] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member} –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Ä–æ–ª–∏: {', '.join(restored_names)}")

                asyncio.create_task(remove_role_later())

    @app_commands.command(
        name="unban",
        description="üîì –°–Ω—è—Ç—å —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    )
    @app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏")
    @app_commands.default_permissions(ban_members=True)
    async def unban(self, interaction: discord.Interaction, user: discord.Member):
        guild = interaction.guild
        black_role = discord.utils.get(guild.roles, name="–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")

        if not black_role:
            await interaction.response.send_message("‚ùå –†–æ–ª—å '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!", ephemeral=True)
            return

        if black_role not in user.roles:
            await interaction.response.send_message("‚ùå –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ!", ephemeral=True)
            return

        # –°–Ω–∏–º–∞–µ–º —Ä–æ–ª—å "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"
        try:
            await user.remove_roles(black_role, reason=f"–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω {interaction.user}")
            print(f"[UNBAN] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user} —Å–Ω—è—Ç–∞ —Ä–æ–ª—å '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω' –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user}.")
        except discord.Forbidden:
            await interaction.response.send_message("‚ùå –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤, —á—Ç–æ–±—ã —Å–Ω—è—Ç—å —Ä–æ–ª—å!", ephemeral=True)
            return

        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–∂–Ω–∏–µ —Ä–æ–ª–∏ –∏–∑ –ë–î
        cursor = DB_BAN.cursor()
        roles_record = cursor.execute(
            "SELECT roles FROM bans WHERE guild_id = ? AND user_id = ?",
            (guild.id, user.id)
        ).fetchone()

        restored_names = []
        if roles_record and roles_record[0]:
            role_ids_restore = [int(rid) for rid in roles_record[0].split(",")]
            for rid in role_ids_restore:
                role = guild.get_role(rid)
                if role:
                    await user.add_roles(role, reason="–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π –ø–æ—Å–ª–µ –±–∞–Ω–∞")
                    restored_names.append(role.name)

        if restored_names:
            print(f"[UNBAN] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user} –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Ä–æ–ª–∏: {', '.join(restored_names)}")

        # Embed —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        embed = discord.Embed(
            title="üîì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω",
            description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {user.mention}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {interaction.user.mention}\n",
            color=discord.Color.green()
        )
        embed.timestamp = datetime.now()

        await interaction.response.send_message(embed=embed, ephemeral=True)

    @app_commands.command(name="mute", description="üîá –í—ã–¥–∞—Ç—å —Ä–æ–ª—å 'Muted' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
    @app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –∑–∞–≥–ª—É—à–µ–Ω–∏—è", duration="–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –º–∏–Ω—É—Ç–∞—Ö",
                           reason="–ü—Ä–∏—á–∏–Ω–∞ –∑–∞–≥–ª—É—à–µ–Ω–∏—è")
    @app_commands.default_permissions(moderate_members=True)
    async def mute(self, interaction: discord.Interaction, user: discord.Member, duration: int = 10,
                   reason: str = "–ù–µ —É–∫–∞–∑–∞–Ω–∞"):
        if user.id == interaction.user.id:
            await interaction.response.send_message("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–≥–ª—É—à–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è!", ephemeral=True)
            return

        if user.id == self.bot.user.id:
            await interaction.response.send_message("‚ùå –Ø –Ω–µ –º–æ–≥—É –∑–∞–≥–ª—É—à–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è!", ephemeral=True)
            return

        guild = interaction.guild

        # –∏—â–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º —Ä–æ–ª—å Muted
        muted_role = discord.utils.get(guild.roles, name="Muted")
        if muted_role is None:
            muted_role = await guild.create_role(name="Muted", color=discord.Color.dark_grey(),
                                                 reason="–î–ª—è —Å–∏—Å—Ç–µ–º—ã –º—É—Ç–∞")

            # –∑–∞–ø—Ä–µ—â–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –≤–æ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–∞—Ö
            for channel in guild.channels:
                try:
                    await channel.set_permissions(muted_role, send_messages=False, speak=False, add_reactions=False)
                except:
                    pass

        # –≤—ã–¥–∞—ë–º —Ä–æ–ª—å
        await user.add_roles(muted_role, reason=f"–ú—É—Ç –æ—Ç {interaction.user}: {reason}")

        embed = discord.Embed(
            title="üîá –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≥–ª—É—à–µ–Ω",
            description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {user.mention}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {interaction.user.mention}\n**–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** {duration} –º–∏–Ω—É—Ç\n**–ü—Ä–∏—á–∏–Ω–∞:** {reason}",
            color=discord.Color.orange()
        )
        embed.timestamp = discord.utils.utcnow()
        await interaction.response.send_message(embed=embed)

        # —Å–Ω–∏–º–∞–µ–º —Ä–æ–ª—å —á–µ—Ä–µ–∑ duration –º–∏–Ω—É—Ç
        await asyncio.sleep(duration * 60)
        if muted_role in user.roles:
            await user.remove_roles(muted_role, reason="–í—Ä–µ–º—è –º—É—Ç–∞ –∏—Å—Ç–µ–∫–ª–æ")
            try:
                await user.send(f"‚úÖ –í–∞—à –º—É—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ **{guild.name}** –∏—Å—Ç—ë–∫.")
            except:
                pass

    @app_commands.command(name="unmute", description="üîä –°–Ω—è—Ç—å –∑–∞–≥–ª—É—à–µ–Ω–∏–µ")
    @app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Å–Ω—è—Ç–∏—è –∑–∞–≥–ª—É—à–µ–Ω–∏—è")
    @app_commands.default_permissions(moderate_members=True)
    async def unmute(self, interaction: discord.Interaction, user: discord.Member):
        """–°–Ω–∏–º–∞–µ—Ç –∑–∞–≥–ª—É—à–µ–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—É–¥–∞–ª—è–µ—Ç —Ä–æ–ª—å Muted)"""
        guild = interaction.guild
        muted_role = discord.utils.get(guild.roles, name="Muted")

        if muted_role is None:
            await interaction.response.send_message("‚ùå –†–æ–ª—å `Muted` –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!", ephemeral=True)
            return

        if muted_role not in user.roles:
            await interaction.response.send_message("‚ÑπÔ∏è –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Ä–æ–ª–∏ `Muted`.", ephemeral=True)
            return

        try:
            await user.remove_roles(muted_role, reason=f"–ó–∞–≥–ª—É—à–µ–Ω–∏–µ —Å–Ω—è—Ç–æ {interaction.user}")

            embed = discord.Embed(
                title="üîä –ó–∞–≥–ª—É—à–µ–Ω–∏–µ —Å–Ω—è—Ç–æ",
                description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {user.mention}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {interaction.user.mention}",
                color=discord.Color.green()
            )
            embed.timestamp = discord.utils.utcnow()

            await interaction.response.send_message(embed=embed)

        except discord.Forbidden:
            await interaction.response.send_message("‚ùå –£ –º–µ–Ω—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —Å–Ω—è—Ç–∏—è –∑–∞–≥–ª—É—à–µ–Ω–∏—è!", ephemeral=True)
        except Exception as e:
            await interaction.response.send_message(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

    @app_commands.command(name="warn", description="‚ö†Ô∏è –í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")
    @app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è", reason="–ü—Ä–∏—á–∏–Ω–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è")
    @app_commands.default_permissions(moderate_members=True)
    async def warn(self, interaction: discord.Interaction, user: discord.Member, reason: str = "–ù–µ —É–∫–∞–∑–∞–Ω–∞"):
        """–í—ã–¥–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        if user.id == interaction.user.id:
            await interaction.response.send_message("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è!", ephemeral=True)
            return
        
        guild_id = interaction.guild.id
        if guild_id not in warnings_storage:
            warnings_storage[guild_id] = {}
        
        if user.id not in warnings_storage[guild_id]:
            warnings_storage[guild_id][user.id] = []
        
        warning = {
            'reason': reason,
            'moderator': interaction.user.id,
            'date': datetime.now(),
            'id': len(warnings_storage[guild_id][user.id]) + 1
        }
        
        warnings_storage[guild_id][user.id].append(warning)
        warn_count = len(warnings_storage[guild_id][user.id])
        
        embed = discord.Embed(
            title="‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤—ã–¥–∞–Ω–æ",
            description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {user.mention}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {interaction.user.mention}\n**–ü—Ä–∏—á–∏–Ω–∞:** {reason}\n**–í—Å–µ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π:** {warn_count}",
            color=Config.COLORS['warning']
        )
        embed.timestamp = datetime.now()
        
        # –ê–≤—Ç–æ–¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–æ–≤
        if warn_count >= Config.MODERATION['auto_ban_warns']:
            try:
                await user.ban(reason=f"–ê–≤—Ç–æ–±–∞–Ω: {Config.MODERATION['auto_ban_warns']} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π")
                embed.add_field(name="üî® –ê–≤—Ç–æ–±–∞–Ω", value="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω", inline=False)
            except:
                pass
        elif warn_count >= Config.MODERATION['max_warns']:
            try:
                timeout_until = datetime.now() + timedelta(hours=1)
                await user.timeout(timeout_until, reason=f"–ê–≤—Ç–æ–∑–∞–≥–ª—É—à–µ–Ω–∏–µ: {warn_count} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π")
                embed.add_field(name="üîá –ê–≤—Ç–æ–∑–∞–≥–ª—É—à–µ–Ω–∏–µ", value="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≥–ª—É—à–µ–Ω –Ω–∞ 1 —á–∞—Å", inline=False)
            except:
                pass
        
        await interaction.response.send_message(embed=embed)
    
    @app_commands.command(name="check_warnings", description="üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    @app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π")
    async def check_warnings(self, interaction: discord.Interaction, user: discord.Member = None):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if user is None:
            user = interaction.user
        
        guild_id = interaction.guild.id
        if guild_id not in warnings_storage or user.id not in warnings_storage[guild_id]:
            embed = discord.Embed(
                title="üìã –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è",
                description=f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.mention} –Ω–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.",
                color=Config.COLORS['success']
            )
            await interaction.response.send_message(embed=embed)
            return
        
        warnings = warnings_storage[guild_id][user.id]
        
        embed = discord.Embed(
            title="üìã –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è",
            description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {user.mention}\n**–í—Å–µ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π:** {len(warnings)}",
            color=Config.COLORS['warning']
        )
        
        for i, warning in enumerate(warnings[-5:], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5
            moderator = interaction.guild.get_member(warning['moderator'])
            mod_name = moderator.display_name if moderator else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            
            embed.add_field(
                name=f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ #{warning['id']}",
                value=f"**–ü—Ä–∏—á–∏–Ω–∞:** {warning['reason']}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {mod_name}\n**–î–∞—Ç–∞:** {warning['date'].strftime('%d.%m.%Y %H:%M')}",
                inline=False
            )
        
        if len(warnings) > 5:
            embed.set_footer(text=f"–ü–æ–∫–∞–∑–∞–Ω—ã –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∏–∑ {len(warnings)} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π")
        
        await interaction.response.send_message(embed=embed)
    
    @app_commands.command(name="clear_warnings", description="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    @app_commands.describe(user="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π")
    @app_commands.default_permissions(administrator=True)
    async def clear_warnings(self, interaction: discord.Interaction, user: discord.Member):
        """–û—á–∏—â–∞–µ—Ç –≤—Å–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        guild_id = interaction.guild.id
        
        if guild_id not in warnings_storage or user.id not in warnings_storage[guild_id]:
            await interaction.response.send_message(f"‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.mention} –Ω–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π!", ephemeral=True)
            return
        
        warn_count = len(warnings_storage[guild_id][user.id])
        del warnings_storage[guild_id][user.id]
        
        embed = discord.Embed(
            title="üóëÔ∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ—á–∏—â–µ–Ω—ã",
            description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {user.mention}\n**–û—á–∏—â–µ–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π:** {warn_count}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {interaction.user.mention}",
            color=Config.COLORS['success']
        )
        embed.timestamp = datetime.now()
        
        await interaction.response.send_message(embed=embed)

    @app_commands.command(name="clear", description="üßπ –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è")
    @app_commands.describe(amount="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (1-100)")
    @app_commands.default_permissions(manage_messages=True)
    async def clear(self, interaction: discord.Interaction, amount: int):
        if amount < 1 or amount > 100:
            await interaction.response.send_message("‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 100!", ephemeral=True)
            return

        await interaction.response.defer(ephemeral=True)  # –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Ç–∞–π–º–∞—É—Ç

        channel = interaction.channel
        deleted_count = 0
        to_bulk = []

        async for msg in channel.history(limit=amount):
            age_seconds = (discord.utils.utcnow() - msg.created_at).total_seconds()
            if age_seconds < 14 * 24 * 60 * 60:
                to_bulk.append(msg)
            else:
                # –°–æ–æ–±—â–µ–Ω–∏—è —Å—Ç–∞—Ä—à–µ 14 –¥–Ω–µ–π —É–¥–∞–ª—è–µ–º –ø–æ –æ–¥–Ω–æ–º—É
                try:
                    await msg.delete()
                    deleted_count += 1
                except (discord.Forbidden, discord.HTTPException):
                    continue

        # Bulk delete –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –º–ª–∞–¥—à–µ 14 –¥–Ω–µ–π
        if to_bulk:
            try:
                await channel.delete_messages(to_bulk)
                deleted_count += len(to_bulk)  # –ü—Ä–æ—Å—Ç–æ –ø—Ä–∏–±–∞–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –ø—ã—Ç–∞–ª–∏—Å—å —É–¥–∞–ª–∏—Ç—å
            except discord.HTTPException:
                pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏

        await interaction.followup.send(f"üßπ –£–¥–∞–ª–µ–Ω–æ {deleted_count} —Å–æ–æ–±—â–µ–Ω–∏–π!", ephemeral=True)

    @app_commands.command(name="slowmode", description="‚è∞ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º")
    @app_commands.describe(seconds="–ó–∞–¥–µ—Ä–∂–∫–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (0-21600)")
    @app_commands.default_permissions(manage_channels=True)
    async def slowmode(self, interaction: discord.Interaction, seconds: int):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º –≤ –∫–∞–Ω–∞–ª–µ"""
        if seconds < 0 or seconds > 21600:  # 6 —á–∞—Å–æ–≤ –º–∞–∫—Å–∏–º—É–º
            await interaction.response.send_message("‚ùå –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 0 –¥–æ 21600 —Å–µ–∫—É–Ω–¥ (6 —á–∞—Å–æ–≤)!", ephemeral=True)
            return
        
        try:
            await interaction.channel.edit(slowmode_delay=seconds)
            
            if seconds == 0:
                description = "–ú–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º –æ—Ç–∫–ª—é—á–µ–Ω"
                color = Config.COLORS['success']
            else:
                description = f"–ú–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: **{seconds} —Å–µ–∫—É–Ω–¥**"
                color = Config.COLORS['warning']
            
            embed = discord.Embed(
                title="‚è∞ –ú–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º",
                description=description,
                color=color
            )
            embed.add_field(name="–ö–∞–Ω–∞–ª", value=interaction.channel.mention, inline=True)
            embed.add_field(name="–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=interaction.user.mention, inline=True)
            
            await interaction.response.send_message(embed=embed)
            
        except discord.Forbidden:
            await interaction.response.send_message("‚ùå –£ –º–µ–Ω—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞!", ephemeral=True)
        except Exception as e:
            await interaction.response.send_message(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)
    
    @app_commands.command(name="lock", description="üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–∞–Ω–∞–ª")
    @app_commands.default_permissions(manage_channels=True)
    async def lock(self, interaction: discord.Interaction):
        """–ë–ª–æ–∫–∏—Ä—É–µ—Ç –∫–∞–Ω–∞–ª –¥–ª—è @everyone"""
        try:
            overwrite = interaction.channel.overwrites_for(interaction.guild.default_role)
            overwrite.send_messages = False
            await interaction.channel.set_permissions(interaction.guild.default_role, overwrite=overwrite)
            
            embed = discord.Embed(
                title="üîí –ö–∞–Ω–∞–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω",
                description=f"**–ö–∞–Ω–∞–ª:** {interaction.channel.mention}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {interaction.user.mention}",
                color=Config.COLORS['error']
            )
            
            await interaction.response.send_message(embed=embed)
            
        except discord.Forbidden:
            await interaction.response.send_message("‚ùå –£ –º–µ–Ω—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞!", ephemeral=True)
        except Exception as e:
            await interaction.response.send_message(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)
    
    @app_commands.command(name="unlock", description="üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–∞–Ω–∞–ª")
    @app_commands.default_permissions(manage_channels=True)
    async def unlock(self, interaction: discord.Interaction):
        """–†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç –∫–∞–Ω–∞–ª –¥–ª—è @everyone"""
        try:
            overwrite = interaction.channel.overwrites_for(interaction.guild.default_role)
            overwrite.send_messages = None  # –°–±—Ä–æ—Å –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            await interaction.channel.set_permissions(interaction.guild.default_role, overwrite=overwrite)
            
            embed = discord.Embed(
                title="üîì –ö–∞–Ω–∞–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω",
                description=f"**–ö–∞–Ω–∞–ª:** {interaction.channel.mention}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {interaction.user.mention}",
                color=Config.COLORS['success']
            )
            
            await interaction.response.send_message(embed=embed)
            
        except discord.Forbidden:
            await interaction.response.send_message("‚ùå –£ –º–µ–Ω—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞!", ephemeral=True)
        except Exception as e:
            await interaction.response.send_message(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)
    
    @app_commands.command(name="moderation_help", description="‚ùì –ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –º–æ–¥–µ—Ä–∞—Ü–∏–∏")
    async def moderation_help(self, interaction: discord.Interaction):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –º–æ–¥–µ—Ä–∞—Ü–∏–∏"""
        embed = discord.Embed(
            title="üõ°Ô∏è –ö–æ–º–∞–Ω–¥—ã –º–æ–¥–µ—Ä–∞—Ü–∏–∏",
            description="–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞",
            color=Config.COLORS['moderation']
        )
        
        commands_list = [
            "`/kick [@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] [–ø—Ä–∏—á–∏–Ω–∞]` - –ò—Å–∫–ª—é—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞",
            "`/ban [@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] [–ø—Ä–∏—á–∏–Ω–∞]` - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞",
            "`/unban [ID]` - –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            "`/mute [@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] [–≤—Ä–µ–º—è] [–ø—Ä–∏—á–∏–Ω–∞]` - –ó–∞–≥–ª—É—à–∏—Ç—å",
            "`/unmute [@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]` - –°–Ω—è—Ç—å –∑–∞–≥–ª—É—à–µ–Ω–∏–µ",
            "`/warn [@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] [–ø—Ä–∏—á–∏–Ω–∞]` - –í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ",
            "`/check_warnings [@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]` - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è",
            "`/clear_warnings [@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]` - –û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è",
            "`/clear [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]` - –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è",
            "`/slowmode [—Å–µ–∫—É–Ω–¥—ã]` - –ú–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º –∫–∞–Ω–∞–ª–∞",
            "`/lock` - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–∞–Ω–∞–ª",
            "`/unlock` - –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–∞–Ω–∞–ª"
        ]
        
        embed.add_field(
            name="üìã –ö–æ–º–∞–Ω–¥—ã:",
            value="\n".join(commands_list),
            inline=False
        )
        
        embed.add_field(
            name="‚öôÔ∏è –ê–≤—Ç–æ–º–æ–¥–µ—Ä–∞—Ü–∏—è:",
            value=f"‚Ä¢ **{Config.MODERATION['max_warns']}** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è = –∑–∞–≥–ª—É—à–µ–Ω–∏–µ –Ω–∞ 1 —á–∞—Å\n"
                  f"‚Ä¢ **{Config.MODERATION['auto_ban_warns']}** –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π = –∞–≤—Ç–æ–±–∞–Ω",
            inline=False
        )
        
        embed.add_field(
            name="üîí –¢—Ä–µ–±—É–µ–º—ã–µ –ø—Ä–∞–≤–∞:",
            value="‚Ä¢ Kick Members - –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è\n"
                  "‚Ä¢ Ban Members - –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏\n"
                  "‚Ä¢ Moderate Members - –¥–ª—è –∑–∞–≥–ª—É—à–µ–Ω–∏—è\n"
                  "‚Ä¢ Manage Messages - –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π\n"
                  "‚Ä¢ Manage Channels - –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∫–∞–Ω–∞–ª–æ–≤",
            inline=False
        )
        
        embed.set_footer(text="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ!")
        
        await interaction.response.send_message(embed=embed)

async def setup(bot):
    await bot.add_cog(Moderation(bot))
